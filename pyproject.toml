[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "timdex_dataset_api"
version = "0.1.0"
description = "Python library for interacting with a TIMDEX parquet dataset"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}

authors = [
    { name = "Graham Hukill", email = "ghukill@mit.edu" }
]

classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

dependencies = [
    "boto3",
    "duckdb",
    "pandas",
    "pyarrow",
]

[project.optional-dependencies]
dev = [
    "black",
    'boto3-stubs[s3]',
    "coveralls",
    "ipython",
    "mypy",
    "pre-commit",
    "pyarrow-stubs",
    "pytest",
    "ruff",
    "setuptools",
    "pandas-stubs",
]

[tool.setuptools.packages.find]
where = ["."]
exclude = ["tests*"]

[tool.black]
line-length = 90

[tool.mypy]
disallow_untyped_calls = true
disallow_untyped_defs = true
exclude = ["tests/", "output/"]

[[tool.mypy.overrides]]
module = []
ignore_missing_imports = true

[tool.pytest.ini_options]
log_level = "INFO"

[tool.ruff]
target-version = "py312"

# set max line length
line-length = 90

# enumerate all fixed violations
show-fixes = true

[tool.ruff.lint]
select = ["ALL", "PT"]
ignore = [
    "COM812",
    "D107",
    "EM101",
    "N812", 
    "PTH", 
    "C90",
    "D100",
    "D101", 
    "D102",
    "D103",
    "D104",
    "D415",
    "EM102",
    "G004",
    "PLR0912",
    "PLR0913", 
    "PLR0915",
    "S320",
    "S321",
    "S608",
]

fixable = ["E", "F", "I", "Q"]

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = [
    "ANN",
    "ARG001",
    "S101",
]

[tool.ruff.lint.pycodestyle]
max-doc-length = 90

[tool.ruff.lint.pydocstyle]
convention = "google"
